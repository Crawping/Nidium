--- skia/src/gpu/gl/GrGLAssembleInterface.cpp
+++ skia/src/gpu/gl/GrGLAssembleInterface.cpp
@@ -761,6 +761,18 @@ const GrGLInterface* GrGLAssembleGLESInterface(void* ctx, GrGLGetProc get) {
 
     GET_PROC(VertexAttribPointer);
     GET_PROC(Viewport);
+    GET_PROC(VertexAttrib2f);
+    GET_PROC(VertexAttrib3f);
+    GET_PROC(VertexAttrib4f);
+    GET_PROC(VertexAttrib1fv);
+    GET_PROC(BlendEquation);
+    GET_PROC(BlendEquationSeparate);
+    GET_PROC(BlendFuncSeparate);
+    GET_PROC_SUFFIX(ClearDepth, f);
+    GET_PROC(DepthFunc);
+    GET_PROC(GetAttribLocation);
+    GET_PROC(GetFloatv);
+    GET_PROC(GetBooleanv);
     GET_PROC(BindFramebuffer);
     GET_PROC(BindRenderbuffer);
     GET_PROC(CheckFramebufferStatus);

--- skia/include/gpu/gl/GrGLFunctions.h
+++ skia/include/gpu/gl/GrGLFunctions.h
@@ -195,7 +195,7 @@ typedef GrGLvoid (GR_GL_FUNCTION_TYPE* GrGLBlendEquationProc)(GrGLenum mode);
 typedef GrGLvoid (GR_GL_FUNCTION_TYPE* GrGLBlendEquationSeparateProc)(GrGLenum modeRGB, GrGLenum modeAlpha);
 // extention?
 typedef GrGLvoid (GR_GL_FUNCTION_TYPE* GrGLBlendFuncSeparateProc)(GrGLenum sfactorRGB, GrGLenum dfactorRGB, GrGLenum sfactorAlpha, GrGLenum dfactorAlpha);
-typedef GrGLvoid (GR_GL_FUNCTION_TYPE* GrGLClearDepthProc)(GrGLclampd depth);
+typedef GrGLvoid (GR_GL_FUNCTION_TYPE* GrGLClearDepthProc)(GrGLclampf depth);
 typedef GrGLvoid (GR_GL_FUNCTION_TYPE* GrGLDepthFuncProc)(GrGLenum func);
 typedef GrGLint (GR_GL_FUNCTION_TYPE* GrGLGetAttribLocationProc)(GrGLuint program, const GrGLchar *name);
 typedef GrGLint (GR_GL_FUNCTION_TYPE* GrGLGetFloatvProc)(GrGLenum pname, GrGLfloat *params);

